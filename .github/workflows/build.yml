name: build

#on:
#  push:
#    tags:
#      - 'v*'

on: [push, pull_request]

jobs:

  release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release kavicat ${{ github.ref }}
          draft: false
          prerelease: false

  publish:
    name: Publish on ${{ matrix.os }}
    needs: release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            type: tar
            artifact_name: kavicat.tar.xz
            asset_name: kavicat_for_linux_${{ github.ref }}.tar.xz
          - os: windows-latest
            type: exe
            artifact_name: kavicat.exe
            asset_name: kavicat_for_windows_${{ github.ref }}.exe
          - os: macos-latest
            type: tar
            artifact_name: kavicat.tar
            asset_name: kavicat_for_macos_${{ github.ref }}.tar

    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Get dependencies
        run: sudo apt-get update && sudo apt-get install gcc libgl1-mesa-dev libegl1-mesa-dev libgles2-mesa-dev libx11-dev xorg-dev
        if: ${{ runner.os == 'Linux' }}

      - name: Install fyne
        run: go get fyne.io/fyne/v2/cmd/fyne

      - name: Fyne package
        run: fyne package

      - name: Package file
        run: tar -cf kavicat.tar kavicat.app
        if: ${{ runner.os == 'macos' }}

      - name: upload
        uses: actions/upload-release-asset@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ${{ matrix.artifact_name }}
          asset_name: ${{ matrix.asset_name }}
          asset_content_type: application/${{ matrix.type }}